#include <stdio.h>
#include<stdlib.h>

struct Node{
    int data;
    struct Node *next;
};

struct Node *Get();
struct Node *Get()
{
    struct Node *n=(struct Node*)malloc(sizeof(struct Node));
    return n;
}
struct Node *create(int);
struct Node *create(int n)
{
    struct Node *head=NULL;
    struct Node *temp;
    struct Node *newNode;
    
    int data,i=0;
    
    for(i=0;i<n;i++)
    {
        printf("Enter data:");
        scanf("%d",&data);
        
        newNode=Get();
        if(newNode==NULL)
        {
            printf("failed\n");
        }
        
        newNode->data=data;
        newNode->next=NULL;

        if(head==NULL){
            head=newNode;
        }
        else
        {
            temp->next=newNode;
        }
         temp=newNode;
    }
    return head;
}

struct Node *copy(struct Node*);
struct Node *copy(struct Node*head)
{
    struct Node *temp=head,*temp1=NULL,*headDup=NULL;
    while(temp!=NULL)
    {
       struct Node* newNode=Get();
        newNode->data=temp->data;
        newNode->next=NULL;
        
        if(headDup==NULL)
        {
            headDup=newNode;
                struct Node *headDup = NULL;temp1=newNode;
        }
        else
        {
            temp1->next=newNode;
            temp1=temp1->next;
        }
        temp=temp->next;
    }
    return headDup;
}

void display(struct Node*);
void display(struct Node *head)
{
    struct Node*ptr;
        ptr=head;
        if(ptr!=NULL)
        {
            while(ptr!=NULL)
            {
                printf("%d\t",ptr->data);
                ptr=ptr->next;
            } 
        }
            else
            {
                printf("Empty List\n");
            }
}

int main()
{
    struct Node *head=NULL;
    struct Node *headDup = NULL;
    int n=0;
    printf("Enter the number of nodes you want:\n");
    scanf("%d",&n);

    head = create(n);
    headDup=copy(head);
    display(headDup);
    return 0;
}